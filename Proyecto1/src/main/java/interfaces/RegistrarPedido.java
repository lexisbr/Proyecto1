/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import conexionDB.Conexion;
import static conexionDB.Conexion.MYSQL_DUPLICATE_PK;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jalej
 */
public class RegistrarPedido extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarPedido
     */
    Conexion a = new Conexion();
    int cantidad_existencia=0;
    int cantidad_compra=0;
  DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
     public DefaultTableModel modelo_pedido = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row, int column) {
                return false;
                }
           };
  // public LocalDate fecha = LocalDate.now();
    public RegistrarPedido() {
        initComponents();
        this.setLocationRelativeTo(null);
        KeyListenerNIT();
        KeyListenerProducto();
        CargarTablaCliente();
        CargarTablaProducto();
        tienda_cb.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                cargarTiempo(Login.tienda_actual, String.valueOf(tienda_cb.getSelectedItem()));
            }
		});
        modelo_pedido.addColumn("Cantidad");
        modelo_pedido.addColumn("Codigo");
        modelo_pedido.addColumn("Nombre");
        modelo_pedido.addColumn("Precio");   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fecha1 = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        registrarpedido = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        nit_txt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_cliente = new javax.swing.JTable();
        seleccionar_cliente = new javax.swing.JButton();
        codigo_txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cantidad_txt = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_producto = new javax.swing.JTable();
        agregar_pedido = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        pedido_jt = new javax.swing.JTable();
        lbl_nit = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbl_nombre = new javax.swing.JLabel();
        credito_lbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        total_lbl1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        total_lbl2 = new javax.swing.JLabel();
        total_lbl = new javax.swing.JLabel();
        credito_txt = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        limpiar_txt = new javax.swing.JButton();
        calcular_boton = new javax.swing.JButton();
        efectivo_txt = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        lbl_tiempo = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        anticipo_lbl = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tienda_cb = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fecha1.setBackground(new java.awt.Color(255, 255, 255));
        fecha1.setForeground(new java.awt.Color(0, 0, 0));
        fecha1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        jPanel1.add(fecha1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 200, 30));

        jLabel5.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Fecha actual:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, 30));

        jLabel2.setFont(new java.awt.Font("Leelawadee", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pedido:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/producto.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel7.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tiempo de llegada:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, 30));

        registrarpedido.setBackground(new java.awt.Color(255, 255, 255));
        registrarpedido.setFont(new java.awt.Font("Leelawadee", 1, 12)); // NOI18N
        registrarpedido.setForeground(new java.awt.Color(0, 0, 0));
        registrarpedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pedido1.png"))); // NOI18N
        registrarpedido.setText("Registrar Pedido");
        registrarpedido.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        registrarpedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarpedidoActionPerformed(evt);
            }
        });
        jPanel1.add(registrarpedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, 180, 60));

        jLabel13.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Tienda Origen:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, 30));

        jLabel14.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("NIT:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        nit_txt.setBackground(new java.awt.Color(255, 255, 255));
        nit_txt.setFont(new java.awt.Font("Leelawadee", 0, 12)); // NOI18N
        nit_txt.setForeground(new java.awt.Color(0, 0, 0));
        nit_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nit_txtActionPerformed(evt);
            }
        });
        jPanel1.add(nit_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 240, 30));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setForeground(new java.awt.Color(0, 0, 0));

        jt_cliente.setFont(new java.awt.Font("Leelawadee", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(jt_cliente);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 380, 120));

        seleccionar_cliente.setBackground(new java.awt.Color(255, 255, 255));
        seleccionar_cliente.setFont(new java.awt.Font("Leelawadee", 1, 12)); // NOI18N
        seleccionar_cliente.setForeground(new java.awt.Color(0, 0, 0));
        seleccionar_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/usuario (1).png"))); // NOI18N
        seleccionar_cliente.setText("Seleccionar Cliente");
        seleccionar_cliente.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        seleccionar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionar_clienteActionPerformed(evt);
            }
        });
        jPanel1.add(seleccionar_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 190, 40));

        codigo_txt.setBackground(new java.awt.Color(255, 255, 255));
        codigo_txt.setFont(new java.awt.Font("Leelawadee", 0, 12)); // NOI18N
        codigo_txt.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(codigo_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 240, 30));

        jLabel6.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Producto:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, 30));

        jLabel8.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cantidad:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, 30));

        cantidad_txt.setBackground(new java.awt.Color(255, 255, 255));
        cantidad_txt.setForeground(new java.awt.Color(0, 0, 0));
        cantidad_txt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        cantidad_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidad_txtKeyTyped(evt);
            }
        });
        jPanel1.add(cantidad_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 90, 30));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(0, 0, 0));

        jt_producto.setFont(new java.awt.Font("Leelawadee", 0, 12)); // NOI18N
        jt_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_producto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_productoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_producto);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 380, 130));

        agregar_pedido.setBackground(new java.awt.Color(255, 255, 255));
        agregar_pedido.setFont(new java.awt.Font("Leelawadee", 1, 12)); // NOI18N
        agregar_pedido.setForeground(new java.awt.Color(0, 0, 0));
        agregar_pedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/supermercado (1).png"))); // NOI18N
        agregar_pedido.setText("Agregar Pedido");
        agregar_pedido.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        agregar_pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_pedidoActionPerformed(evt);
            }
        });
        jPanel1.add(agregar_pedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 580, 190, 40));

        jLabel22.setForeground(new java.awt.Color(204, 204, 204));
        jLabel22.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255), null, new java.awt.Color(153, 153, 153)));
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 400, 290));

        pedido_jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cantidad", "Codigo", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(pedido_jt);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 440, 90));

        lbl_nit.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        lbl_nit.setForeground(new java.awt.Color(0, 0, 0));
        lbl_nit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        jPanel1.add(lbl_nit, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 150, 30));

        jLabel11.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 0));
        jLabel11.setText("NIT:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, -1, 30));

        lbl_nombre.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        lbl_nombre.setForeground(new java.awt.Color(0, 0, 0));
        lbl_nombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        jPanel1.add(lbl_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 350, 150, 30));

        credito_lbl.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        credito_lbl.setForeground(new java.awt.Color(0, 0, 0));
        credito_lbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        jPanel1.add(credito_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 140, 30));

        jLabel9.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 0));
        jLabel9.setText("Nombre:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 350, -1, 30));

        jLabel15.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 0));
        jLabel15.setText("Credito:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 410, -1, 30));

        total_lbl1.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        total_lbl1.setForeground(new java.awt.Color(0, 0, 0));
        total_lbl1.setText("Q.");
        jPanel1.add(total_lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, -1, 30));

        jLabel10.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 0));
        jLabel10.setText("Total:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(695, 410, -1, 30));

        total_lbl2.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        total_lbl2.setForeground(new java.awt.Color(0, 0, 0));
        total_lbl2.setText("Q.");
        jPanel1.add(total_lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 410, 20, 30));

        total_lbl.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        total_lbl.setForeground(new java.awt.Color(0, 0, 0));
        total_lbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        jPanel1.add(total_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 410, 150, 30));

        credito_txt.setBackground(new java.awt.Color(255, 255, 255));
        credito_txt.setForeground(new java.awt.Color(0, 0, 0));
        credito_txt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        credito_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credito_txtActionPerformed(evt);
            }
        });
        credito_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                credito_txtKeyTyped(evt);
            }
        });
        jPanel1.add(credito_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 470, 150, 30));

        jLabel16.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 0));
        jLabel16.setText("Credito:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, -1, 30));

        jLabel17.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 0, 51));
        jLabel17.setText("Anticipo:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 590, -1, 30));

        jLabel18.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 0));
        jLabel18.setText("Efectivo:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 510, -1, 30));

        limpiar_txt.setBackground(new java.awt.Color(255, 255, 255));
        limpiar_txt.setFont(new java.awt.Font("Leelawadee", 1, 12)); // NOI18N
        limpiar_txt.setForeground(new java.awt.Color(0, 0, 0));
        limpiar_txt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refresh.png"))); // NOI18N
        limpiar_txt.setText("Limpiar");
        limpiar_txt.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        limpiar_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar_txtActionPerformed(evt);
            }
        });
        jPanel1.add(limpiar_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(765, 560, 120, 60));

        calcular_boton.setBackground(new java.awt.Color(255, 255, 255));
        calcular_boton.setFont(new java.awt.Font("Leelawadee", 1, 12)); // NOI18N
        calcular_boton.setForeground(new java.awt.Color(0, 0, 0));
        calcular_boton.setText("Calcular pago");
        calcular_boton.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        calcular_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular_botonActionPerformed(evt);
            }
        });
        jPanel1.add(calcular_boton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, 110, 30));

        efectivo_txt.setBackground(new java.awt.Color(255, 255, 255));
        efectivo_txt.setForeground(new java.awt.Color(0, 0, 0));
        efectivo_txt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jPanel1.add(efectivo_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 150, 30));

        jLabel19.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Pedido.");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, -1, 30));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/regresar.png"))); // NOI18N
        jButton7.setText("Regresar");
        jButton7.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 30, 130, 30));

        lbl_tiempo.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        lbl_tiempo.setForeground(new java.awt.Color(0, 0, 0));
        lbl_tiempo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        lbl_tiempo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_tiempoMouseClicked(evt);
            }
        });
        jPanel1.add(lbl_tiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 180, 30));

        jLabel24.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255), null, new java.awt.Color(153, 153, 153)));
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 400, 225));

        anticipo_lbl.setFont(new java.awt.Font("Leelawadee", 1, 14)); // NOI18N
        anticipo_lbl.setForeground(new java.awt.Color(0, 0, 0));
        anticipo_lbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204), null));
        jPanel1.add(anticipo_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 590, 150, 30));

        jLabel23.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255))));
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 460, 290));

        jLabel25.setForeground(new java.awt.Color(204, 204, 204));
        jLabel25.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255))));
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 450, 170));

        tienda_cb.setBackground(new java.awt.Color(255, 255, 255));
        tienda_cb.setForeground(new java.awt.Color(0, 0, 0));
        tienda_cb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tienda_cbMouseClicked(evt);
            }
        });
        tienda_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tienda_cbActionPerformed(evt);
            }
        });
        jPanel1.add(tienda_cb, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, 180, 30));

        jLabel21.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255), null, new java.awt.Color(153, 153, 153)));
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 460, 225));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondopedido.jpg"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 650));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarpedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarpedidoActionPerformed
       
        double credito_ingresado=0;
        try {
            LocalDate fecha = LocalDate.parse(fecha1.getText(), formatter);
            if((credito_txt.getText().equals(""))){  
            credito_ingresado=0;
        }
        else credito_ingresado = Double.parseDouble(credito_txt.getText());
        double total = Double.parseDouble(total_lbl.getText());
        double credito_cliente = Double.parseDouble(credito_lbl.getText());
        double anticipo = Double.parseDouble(anticipo_lbl.getText());
        String Datos[] = new String[4];
            System.out.println("aqui");
       if(!(lbl_nit.getText().equals(null))&&(total!=0)&&(verificarCredito(credito_cliente, credito_ingresado))){
        for(int i=0; i< pedido_jt.getRowCount(); i++){
           Datos[0]=pedido_jt.getValueAt(i,0).toString();
           Datos[1]=pedido_jt.getValueAt(i,1).toString();
           Datos[2]=pedido_jt.getValueAt(i,3).toString();
           Datos[3]=pedido_jt.getValueAt(i,2).toString(); 
           int cantidad = Integer.parseInt(Datos[0]);
           updateProducto(cantidad_existencia, cantidad, Datos[1]);
           updateCliente(credito_cliente, credito_ingresado, lbl_nit.getText());
           insertPedido(fecha, cantidad, total, anticipo, Datos[1], lbl_nit.getText(), Login.tienda_actual, String.valueOf(tienda_cb.getSelectedItem()));
           JOptionPane.showMessageDialog(null, "Se registro el pedido.");
        }
           
       }
       else{
           JOptionPane.showMessageDialog(null, "Los campos no estan llenos");
       }
      
      
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Error los campos no estan llenos ");
        }
        
    }//GEN-LAST:event_registrarpedidoActionPerformed

    private void nit_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nit_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nit_txtActionPerformed

    private void seleccionar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionar_clienteActionPerformed
        int FilaSeleccionada = jt_cliente.getSelectedRow();
        String nit = "";
        String name = "";
        String credito = "";

        if(FilaSeleccionada>=0){
            nit=jt_cliente.getValueAt(FilaSeleccionada,0).toString();
            name=jt_cliente.getValueAt(FilaSeleccionada, 1).toString();
            credito = jt_cliente.getValueAt(FilaSeleccionada, 2).toString();
        }
        lbl_nit.setText(nit);
        lbl_nombre.setText(name);
        credito_lbl.setText(credito);
        

    }//GEN-LAST:event_seleccionar_clienteActionPerformed

    private void cantidad_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidad_txtKeyTyped
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_cantidad_txtKeyTyped

    private void jt_productoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_productoMouseClicked

    }//GEN-LAST:event_jt_productoMouseClicked

    private void agregar_pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_pedidoActionPerformed
      int FilaSeleccionada = jt_producto.getSelectedRow();
      cantidad_existencia=0;
      cantidad_compra=0;
        pedido_jt.setModel(modelo_pedido);

        if(FilaSeleccionada>=0){
            if((!(cantidad_txt.getText().equals("")))){
                cantidad_existencia = Integer.parseInt(jt_producto.getValueAt(FilaSeleccionada,3).toString());
                cantidad_compra= Integer.parseInt(cantidad_txt.getText());
                if(verificarExistencia(cantidad_existencia, cantidad_compra)){
                    String Datos[] = new String[4];
                    Datos[0]=cantidad_txt.getText();
                    Datos[1]=jt_producto.getValueAt(FilaSeleccionada,0).toString();
                    Datos[2]=jt_producto.getValueAt(FilaSeleccionada,1).toString();
                    Datos[3]=jt_producto.getValueAt(FilaSeleccionada,2).toString();
                    modelo_pedido.addRow(Datos);
                    sumartotal();
                    agregar_pedido.setEnabled(false);
                    System.out.println("===="+Datos[1]);
                   cargarCbTienda(Datos[1]);
                   seleccionar_cliente.setEnabled(false);
                    
                }else{
                    JOptionPane.showMessageDialog(null,"No hay cantidad suficiente de productos.");
                }

            }else{
                JOptionPane.showMessageDialog(null,"Ingrese cantidad de producto");
            }
        }else{JOptionPane.showMessageDialog(null,"Seleccione producto");}
        cantidad_txt.setText(null);
        
    }//GEN-LAST:event_agregar_pedidoActionPerformed

    private void credito_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credito_txtActionPerformed

    }//GEN-LAST:event_credito_txtActionPerformed

    private void credito_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_credito_txtKeyTyped

    }//GEN-LAST:event_credito_txtKeyTyped

    private void calcular_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular_botonActionPerformed
        double credito_ingresado =0;
        double anticipo=0;
        double efectivo = 0;
        try {
           
           double total = Double.parseDouble(total_lbl.getText());
            double credito_cliente = Double.parseDouble(credito_lbl.getText());
           
            
            if(!(credito_txt.getText().equals(""))&&!(efectivo_txt.getText().equals(""))){
                credito_ingresado = Double.parseDouble(credito_txt.getText());
                efectivo = Double.parseDouble(efectivo_txt.getText());
                if(verificarCredito(credito_cliente, credito_ingresado)){
                    anticipo = efectivo+credito_ingresado;
                    if(((anticipo>=(total*0.25))&&(anticipo<=total))){
                    anticipo_lbl.setText(String.valueOf(anticipo));
                    }else if(anticipo>total){
                        JOptionPane.showMessageDialog(null, "Su anticipo es mayor que el total");
                    }else{   
                    JOptionPane.showMessageDialog(null, "Su anticipo es insuficiente");
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Su credito es insuficiente");
                }
            }else if((credito_txt.getText().equals(""))&&!(efectivo_txt.getText().equals(""))){
                efectivo = Double.parseDouble(efectivo_txt.getText());
                if(efectivo>=(total*0.25)&&(efectivo<=total)){
                    anticipo = efectivo;
                    anticipo_lbl.setText(String.valueOf(anticipo));
                }else if(efectivo>total){
                        JOptionPane.showMessageDialog(null, "Su anticipo es mayor que el total");
                }else{
                    JOptionPane.showMessageDialog(null, "Su anticipo es insuficiente");
                }
            }else if((efectivo_txt.getText().equals(""))&&!(credito_txt.getText().equals(""))){
                credito_ingresado = Double.parseDouble(credito_txt.getText());
                if(verificarCredito(credito_cliente, credito_ingresado)){
                if(credito_ingresado>=(total*0.25)&&(credito_ingresado<=total)){
                    anticipo = credito_ingresado;
                    anticipo_lbl.setText(String.valueOf(anticipo));
                }else if(credito_ingresado>total){
                        JOptionPane.showMessageDialog(null, "Su anticipo es mayor que el total");
                }else{
                    JOptionPane.showMessageDialog(null, "Su anticipo es insuficiente");
                }
                }else{
                    JOptionPane.showMessageDialog(null, "Su credito es insuficiente");
                }
                
            }else{
             JOptionPane.showMessageDialog(null, "Llene los campos");
            }
      
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado todos los items");
        }

    }//GEN-LAST:event_calcular_botonActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        OpcionesPedido a = new OpcionesPedido();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void tienda_cbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tienda_cbMouseClicked
        
    }//GEN-LAST:event_tienda_cbMouseClicked

    private void tienda_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tienda_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tienda_cbActionPerformed

    private void lbl_tiempoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_tiempoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_tiempoMouseClicked

    private void limpiar_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar_txtActionPerformed
       limpiarPantalla();
    }//GEN-LAST:event_limpiar_txtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarPedido().setVisible(true);
            }
        });
    }
    
      public void KeyListenerProducto(){
      
        codigo_txt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                CargarTablaProducto();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                 CargarTablaProducto();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                 CargarTablaProducto();
            }
           
        });
    }
    
      public void KeyListenerNIT(){
      
        nit_txt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                CargarTablaCliente();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                 CargarTablaCliente();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                 CargarTablaCliente();
            }
           
        });
    }
    
     public void CargarTablaCliente(){
        String campo = nit_txt.getText();
        String where = "";

        if (!"".equals(campo)) {
            where = "WHERE nit LIKE '%" + campo + "%'";

        }else{
            where="";
        }
         try {
            DefaultTableModel modelo_cliente = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row, int column) {
                return false;
                }
           };
           jt_cliente.setModel(modelo_cliente);
           modelo_cliente.addColumn("NIT");
           modelo_cliente.addColumn("Nombre"); 
           modelo_cliente.addColumn("Credito"); 
           String query_cliente = "SELECT nit,nombre,credito_compra FROM CLIENTE "+where;
           System.out.println(query_cliente);
           ResultSet rs = a.SeleccionarJT(query_cliente);
           ResultSetMetaData rsMd = rs.getMetaData();
           int cantidadColumnas = rsMd.getColumnCount();
             System.out.println("creando tabla");
           while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0; i<cantidadColumnas; i++){
                    filas[i]= rs.getObject(i+1);
                }
                modelo_cliente.addRow(filas);    
            }
           rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Error "+ e);
            
        }
    }
     
    
    public void CargarTablaProducto(){
        String campo = codigo_txt.getText();
        String where = "";

        if (!"".equals(campo)) {
            where = "&& codigo LIKE '%" + campo + "%' ";

        }else{
            where="";
        }
         try {
             DefaultTableModel modelo_producto = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row, int column) {
                return false;
                }
           };
             System.out.println("++++"+where);
           jt_producto.setModel(modelo_producto);
           modelo_producto.addColumn("Codigo");
           modelo_producto.addColumn("Nombre");
           modelo_producto.addColumn("Precio");
           modelo_producto.addColumn("Cantidad");   
           String query_producto = "SELECT codigo,nombre,precio,cantidad FROM PRODUCTO WHERE codigo_tienda NOT IN (SELECT codigo_tienda PRODUCTO WHERE codigo_tienda='"+Login.tienda_actual+"')"+where;
           System.out.println(query_producto);
           ResultSet rs = a.SeleccionarJT(query_producto);
           ResultSetMetaData rsMd = rs.getMetaData();
           int cantidadColumnas = rsMd.getColumnCount();       
           while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0; i<cantidadColumnas; i++){             
                    filas[i]= rs.getObject(i+1);
                }
                modelo_producto.addRow(filas);    
            }
           rs.close();
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Error "+ e);
            
        }
    }
    
    
    
    
    public boolean verificarExistencia(int tienda, int venta){
         if((tienda-venta)>=0) return true;
         else return false;
     }
    
    public void sumartotal(){
        double t=0;
        double p=0;
        int rowscount=pedido_jt.getRowCount();
        if (pedido_jt.getRowCount() > 0) {
            for (int i = 0; i < rowscount; i++) {
                p=Double.parseDouble(pedido_jt.getValueAt(i, 3).toString());
                p*=Double.parseDouble(pedido_jt.getValueAt(i, 0).toString());
                t+=p;
            }
        }
        total_lbl.setText(String.valueOf(t));

    }
     public void updateProducto(int cantidad_tienda, int cantidad_venta,String codigo){
         System.out.println("entra a update +"+codigo+" <a>"+cantidad_tienda+"<b>"+cantidad_venta );
         int nuevacantidad = cantidad_tienda - cantidad_venta;
          Statement stmt = null;
        try {
             String query = ("UPDATE PRODUCTO SET cantidad = '"+nuevacantidad+"' WHERE codigo='"+codigo+"'" );
             a.conexionDB();
             stmt = a.getConnection().createStatement();
             stmt.executeUpdate(query);
             stmt.close();
            CargarTablaProducto();
        }catch (SQLException e) {
             JOptionPane.showMessageDialog(null,"Error "+e);
        }
     }
     
     public void cargarCbTienda(String nombre){
          String Query="SELECT codigo_tienda FROM PRODUCTO WHERE codigo='"+nombre+"'";
          ResultSet Result = a.SeleccionarCB(Query);
         try {
             while (Result.next()) {
               if(!(Result.equals(Login.tienda_actual))){
                  tienda_cb.addItem(String.valueOf(Result.getObject("codigo_tienda"))); 
                  
                }
              }
         Result.close();
         a.disconnectDB();
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"a Error "+e);
        }
     
     }
     
   /*  public void cargarTiempo(String tienda1,String tienda2){
         System.out.println("entra a cargar tiempo <>"+tienda1+"<> "+tienda2);
         String Query1="SELECT * FROM TIENDA WHERE codigo LIKE 'ABC%'"; 
         String Query="SELECT tiempo FROM TIEMPO_DE_ENVIO WHERE ((codigo_tienda1='"+tienda1+"' && codigo_tienda2='"+tienda2+"')||(codigo_tienda1='"+tienda2+"' && codigo_tienda2='"+tienda1+"'))";
          ResultSet Result = a.consulta(Query1);
          
         try {
                
                while (Result.next()) {
                
                  tiempo_cb.addItem(String.valueOf(Result.getObject("codigo"))); 

              }
  
                   
              //  lbl_tiempo.setText(Result.getString(1));           
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en tiempo "+e);
        }
     
     }*/
     
     
     
      public void cargarTiempo(String tienda1,String tienda2){
          Conexion b = new Conexion();
          String Query="SELECT tiempo FROM TIEMPO_DE_ENVIO WHERE ((codigo_tienda1='"+tienda1+"' && codigo_tienda2='"+tienda2+"')||(codigo_tienda1='"+tienda2+"' && codigo_tienda2='"+tienda1+"'))";
          
          ResultSet Result = b.SeleccionarCB(Query);
         try {
             while (Result.next()) {
               if(!(Result.equals(Result.getObject("tiempo")))){
                  lbl_tiempo.setText(String.valueOf(Result.getObject("tiempo"))); 
                }
              }
         Result.close();
         a.disconnectDB();
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error "+e);
        }
     
     }
      
     public boolean verificarCredito(double credito_cliente, double credito_ingresado){
         if((credito_cliente-credito_ingresado)>=0) return true;
         else return false;
     }
     
     public void updateCliente(double creditocliente,double creditoingresado,String codigo){
         double nuevocredito = creditocliente - creditoingresado;
          Statement stmt = null;
        try {
             String query = ("UPDATE CLIENTE SET credito_compra= '"+nuevocredito+"' WHERE NIT='"+codigo+"'" );
             a.conexionDB();
             stmt = a.getConnection().createStatement();
             stmt.executeUpdate(query);
             stmt.close();
            CargarTablaCliente();
        }catch (SQLException e) {
             if(e.getErrorCode() == MYSQL_DUPLICATE_PK ){
                JOptionPane.showMessageDialog(null,"Error, el codigo ya existe.");
             }else{
             JOptionPane.showMessageDialog(null,"Error "+e);
             }
        }
     }
     
    public void insertPedido(LocalDate fecha,int cantidad,double total,double anticipo,String producto,String cliente,String tienda1,String tienda2){
        System.out.println("entra a db");
        Statement stmt = null;
        try {
             String query = ("INSERT INTO PEDIDO(codigo_tienda_destino,codigo_tienda_origen,fecha,nit_cliente,codigo_producto,cantidad,total,anticipo) VALUES('"+tienda1+"','"+tienda2+"','"+fecha+"','"+cliente+"','"+producto+"','"+cantidad+"','"+total+"','"+anticipo+"')");
             a.conexionDB();
             stmt = a.getConnection().createStatement();
             stmt.executeUpdate(query);
             stmt.close();
             
        }catch(Exception e) {
               JOptionPane.showMessageDialog(null,"Hay un error en Pedido");
         
        }

    }
    
    public void limpiarPantalla(){
        fecha1.setText(null);
        credito_txt.setText(null);
        efectivo_txt.setText(null);
        anticipo_lbl.setText(null);
        lbl_nit.setText(null);
        lbl_nombre.setText(null);
        lbl_tiempo.setText(null);
        total_lbl.setText(null);
        credito_lbl.setText(null);
        cantidad_txt.setText(null);
        codigo_txt.setText(null);
        nit_txt.setText(null);
        tienda_cb.removeAllItems();
        modelo_pedido.setRowCount(0);
        seleccionar_cliente.setEnabled(true);
        agregar_pedido.setEnabled(true);
        Conexion a = new Conexion();
        CargarTablaProducto();
        CargarTablaCliente();
    }
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar_pedido;
    private javax.swing.JLabel anticipo_lbl;
    private javax.swing.JButton calcular_boton;
    private javax.swing.JFormattedTextField cantidad_txt;
    private javax.swing.JTextField codigo_txt;
    private javax.swing.JLabel credito_lbl;
    private javax.swing.JFormattedTextField credito_txt;
    private javax.swing.JFormattedTextField efectivo_txt;
    private javax.swing.JFormattedTextField fecha1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jt_cliente;
    private javax.swing.JTable jt_producto;
    private javax.swing.JLabel lbl_nit;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_tiempo;
    private javax.swing.JButton limpiar_txt;
    private javax.swing.JTextField nit_txt;
    private javax.swing.JTable pedido_jt;
    private javax.swing.JButton registrarpedido;
    private javax.swing.JButton seleccionar_cliente;
    private javax.swing.JComboBox<String> tienda_cb;
    private javax.swing.JLabel total_lbl;
    private javax.swing.JLabel total_lbl1;
    private javax.swing.JLabel total_lbl2;
    // End of variables declaration//GEN-END:variables
}
